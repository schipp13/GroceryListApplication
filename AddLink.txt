using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Test1
{
    public partial class DisplayEvent : Form
    {
        private List<FlowLayoutPanel> listFLDay = new List<FlowLayoutPanel>();
        private DateTime currentDate = DateTime.Today;
        Event @event = new Event();
        public DisplayEvent()
        {
            InitializeComponent();
        }

        private void DisplayEvent_Load(object sender, EventArgs e)
        {
            GenerateDayPanel(42);
            DisplayCurrentDate();
        }

        private void AddNewEvent(object sender, EventArgs e)
        {
            int day = (int)((FlowLayoutPanel)sender).Tag;
            if (day != 0)
            {
                AddEvent addEvent = new AddEvent();
                
                //SETTERS FROM ADDEVENT FORM
                addEvent.AppID = 0;
                addEvent.DatePicker = new DateTime(currentDate.Year, currentDate.Month, day); 
                addEvent.DatePicker2 = new DateTime(currentDate.Year, currentDate.Month, day);
                addEvent.comboBox = "";
                addEvent.textBox = "";
                //--
                addEvent.ShowDialog();
                DisplayCurrentDate();
            }
            
        }

        private void ShowEventDetails(object sender, EventArgs e)
        {
            int appID = Convert.ToInt32(((LinkLabel)sender).Tag);
            string sql = $"select * from calendar where id ='{appID}'";
            DataTable dt = @event.QueryAsDataTable(sql);

            if(dt.Rows.Count > 0)
            {
                DataRow dr = dt.Rows[0];
                AddEvent addEvent = new AddEvent();
                //SETTERS FROM ADDEVENT FORM
                addEvent.AppID = appID;
                addEvent.textBox = dr["Title"].ToString();
                addEvent.comboBox = dr["Color"].ToString();
                addEvent.DatePicker = (DateTime)dr["startDate"];
                addEvent.DatePicker2 = (DateTime)dr["endDate"];
                //--
                addEvent.ShowDialog();
                DisplayCurrentDate();
            }
        }

        private void AddAppointmentToFlDay(int startDayAtFlNumber)
        {
            DateTime startDate = new DateTime(currentDate.Year, currentDate.Month, 1);
            DateTime endDate = startDate.AddMonths(1).AddDays(-1);

            string sql = $"select * from calendar where startDate between '{startDate.ToShortDateString()}' and '{endDate.ToShortDateString()}'";
            DataTable dt = @event.QueryAsDataTable(sql);

            foreach(DataRow dr in dt.Rows)
            {
                DateTime appday = DateTime.Parse(dr["startDate"].ToString());
                var link = new LinkLabel();
                link.Tag = dr["id"].ToString(); 
                link.Name = $"link{dr["id"]}";
                link.Text = dr["Title"].ToString();
                link.BackColor = Color.FromName(dr["color"].ToString());
                link.LinkColor = Color.White;
                link.AutoSize = true;
                link.Click += ShowEventDetails;
                listFLDay[(appday.Day-1) + (startDayAtFlNumber - 1)].Controls.Add(link);
            }
        }

        private int GetFirstDayOfWeekOfCurrentDate()
        {
            DateTime firstDayOfMonth = new DateTime(currentDate.Year, currentDate.Month, 1);
            return (int)firstDayOfMonth.DayOfWeek + 1;
        }

        private int GetTotalDayCurrentDate()
        {
            DateTime firstDayOfMonth = new DateTime(currentDate.Year, currentDate.Month, 1);
            return (int)firstDayOfMonth.AddMonths(1).AddDays(-1).Day;
        }

        private void DisplayCurrentDate()
        {
            int firstDayAtFlNumber = GetFirstDayOfWeekOfCurrentDate();
            int totalDay = GetTotalDayCurrentDate();
            lblMonthYear.Text = currentDate.ToString("MMMM, yyyy");
            AddLabelDayToFlDay(firstDayAtFlNumber, totalDay);
            AddAppointmentToFlDay(firstDayAtFlNumber);
        }

        private void PrevMonth()
        {
            currentDate = currentDate.AddMonths(-1);
            DisplayCurrentDate();
        }

        private void NextMonth()
        {
            currentDate = currentDate.AddMonths(1);
            DisplayCurrentDate();
        }

        private void Today()
        {
            currentDate = DateTime.Today;
            DisplayCurrentDate();
        }
        private void GenerateDayPanel(int totalDays)
        {
            flDays.Controls.Clear();
            listFLDay.Clear();
            for(int i = 1; i<=totalDays; i++)
            {
                var fl = new FlowLayoutPanel();
                fl.Name = $"flday{i}";
                fl.Size = new Size(156, 123);
                fl.BackColor = Color.White;
                fl.BorderStyle = BorderStyle.FixedSingle;
                fl.Cursor = Cursors.Hand;
                fl.Click += AddNewEvent;
                flDays.Controls.Add(fl);
                listFLDay.Add(fl);
            }
        }

        private void AddLabelDayToFlDay(int startDayAtFlNumber, int totalDaysInMonth)
        {
            foreach(FlowLayoutPanel fl in listFLDay)
            {
                fl.Controls.Clear();
                fl.Tag = 0;
                fl.BackColor = Color.White;
            }

            for( int i = 1;i<=totalDaysInMonth; i++)
            {
                var lbl = new Label();
                lbl.Name = $"lblDay{i}";
                lbl.AutoSize = false;
                lbl.TextAlign = ContentAlignment.MiddleRight;
                lbl.Size = new Size(153, 20);
                lbl.Text = i.ToString();
                listFLDay[(i - 1) + (startDayAtFlNumber - 1)].Tag = i;
                listFLDay[(i -1) + (startDayAtFlNumber-1)].Controls.Add(lbl);

                if (new DateTime(currentDate.Year, currentDate.Month, i) == DateTime.Today)
                {
                    listFLDay[(i - 1) + (startDayAtFlNumber - 1)].BackColor = Color.Gold;
                }
            }
        }

        private void btnPrev_Click(object sender, EventArgs e)
        {
            PrevMonth();
        }

        private void btnNext_Click(object sender, EventArgs e)
        {
            NextMonth();
        }

        private void btnToday_Click(object sender, EventArgs e)
        {
            Today();
        }
    }
}